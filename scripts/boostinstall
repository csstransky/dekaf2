#!/bin/bash

#% boostinstall - install a clean boost under /opt/boost
#%
#% usage: boostinstall -go|ask
#%


# are we in test mode?
if [ "$1" = "-x" ]; then
	set -x
	shift
fi # end check test mode

setx=Synopsis
#==================
Synopsis ()
#==================
{
	awk '/^#%/ {print substr($0,3)}' "${ME_FULLPATH}"

} # Synopsis

setx=BoostSetupAbort
#==================
BoostSetupAbort ()
#==================
{
	cd /
	# clean up in /tmp
	[ "${BUILDDIR}" != "" ] && sudo rm -rf "${BUILDDIR}"
	# and leave
	Die $*

} # BoostSetupAbort

setx=BoostSetup
#==================
BoostSetup ()
#==================
{
	ask=$1
	VERSION="1.69.0"
	NAME="1_69_0"
	BUILDDIR="/tmp/boost-build-${NAME}"
	PREFIX="/opt/boost"

	if [ "${DISTRIB}" == "darwin" ]; then
		# simply install from brew
		InstallSystemPackages boost
		return
	fi

	[ -d "${PREFIX}" ] && Die "${PREFIX} already existing - change install location or remove existing install"

	if [ "$ask" != "" ]; then
		echo "Continue installing boost-${VERSION} in ${PREFIX}? (Y/n)"
		read -n 1 Ch
		if [ "$Ch" == "n" ]; then
			exit 1
		fi
	fi

	Info "installing boost-${VERSION}"

	sudo rm -rf ${BUILDDIR}
	mkdir -p ${BUILDDIR} || Die "cannot create build directory ${BUILDDIR}"
	cd ${BUILDDIR} || BoostSetupAbort "cannot cd into build directory ${BUILDDIR}"

	Info "downloading boost-${VERSION} (this may take a while)"

	wget --no-verbose https://dl.bintray.com/boostorg/release/${VERSION}/source/boost_${NAME}.tar.gz || \
		BoostSetupAbort "cannot not download from https://dl.bintray.com/boostorg/release/${VERSION}/source/boost_${NAME}.tar.gz"

	tar -xzf boost_${NAME}.tar.gz || BoostSetupAbort "cannot not untar source archive boost_${NAME}.tar.gz"

	cd boost_${NAME} || BoostSetupAbort "cannot cd into source directory ${BUILDDIR}/boost_${NAME}"

	./bootstrap.sh --prefix=${PREFIX} || BoostSetupAbort "cannot execute ./bootstrap.sh --prefix=${PREFIX}"

	# boost sometimes fails on building some of the hundreds of modules and returns with an error.
	# However, we postpone the error check into cmake, so we do not evaluate a partial failure here.
	sudo ./b2 install -j4 --prefix=${PREFIX} --with=all # || Die "cannot execute sudo ./b2 install -j4 --prefix=${PREFIX} --with=all"

	cd && sudo rm -rf "${BUILDDIR}"

	Info "boost-${VERSION} installed in ${PREFIX}"

} # BoostSetup

#==================
setx=Main_Body
#==================

ME=$(basename "${BASH_SOURCE}")
ME_ONLYPATH="$(cd $(dirname ${BASH_SOURCE}) && pwd)"
ME_FULLPATH="$ME_ONLYPATH/$ME"
ScriptLib="${ME_ONLYPATH}/scriptlib"

[[ ! -f "${ScriptLib}" ]] && Die "Cannot check OS version, script '${ScriptLib}' not found"

source ${ScriptLib}

if [ "$1" == "-ask" ]; then
	ask="1"
else
	if [ "$1" != "-go" ]; then
		Synopsis
		exit 1
	fi
fi

SetupColors
GetOS
BoostSetup $ask

exit 0

