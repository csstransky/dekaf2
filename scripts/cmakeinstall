#! /bin/bash

#%
#% cmakeinstall - Install a version of cmake that is compatible with dekaf.
#%
#% usage: cmakeinstall -go|ask
#%


# are we in test mode?
if [ "$1" = "-x" ]; then
	set -x
	shift
fi # end check test mode

setx=Synopsis
#==================
Synopsis ()
#==================
{
	awk '/^#%/ {print substr($0,3)}' "${ME_FULLPATH}"

} # Synopsis

setx=CMakeSetupAbort
#==================
CMakeSetupAbort ()
#==================
{
	cd /
	# clean up in /tmp
	sudo rm -rf /tmp/cmake-install
	# and leave
	Die $*

} # CMakeSetupAbort

setx=CMakeSetup
#==================
CMakeSetup ()
#==================
{
	# ask before update?
	ask=$1

	# check version of installed cmake
	sCMakeVersion=$(cmake --version 2>/dev/null | sed 's|[^0-9.]||g' | head -1)
	if [ "$sCMakeVersion" == "" ]; then
		CMakeMajor="0"
		CMakeMinor="0"
	else
		CMakeMajor=$(echo $sCMakeVersion | cut -d . -f 1)
		CMakeMinor=$(echo $sCMakeVersion | cut -d . -f 2)
	fi

	echo ":: you have cmake $sCMakeVersion ($CMakeMajor.$CMakeMinor) and need at least 3.13 ..."

	# we want at least 3.13
	if [ $CMakeMajor -lt 3 ] || ( [ $CMakeMajor -eq 3 ] && [ $CMakeMinor -lt 13 ] ); then

		sCmakeFolder="v3.13"         # e.g. https://cmake.org/files/v3.13/
		sCMakeNewVersion="3.13.5"    # e.g. https://cmake.org/files/v3.13/cmake-3.13.5.tar.gz

 		test -z "$BINDIR" && Die "BINDIR label cannot be determined"

		if [ "$sCMakeVersion" == "" ]; then
			Info "CMakeSetup: CMake is not installed"
		else
			Info "CMakeSetup: found insufficient CMake ${sCMakeVersion}. Will upgrade to ${sCMakeNewVersion}"
		fi

		if [ "$ask" != "" ]; then
			echo "Continue installing CMake ${sCMakeNewVersion}? (Y/n)"
			read -n 1 Ch
			if [ "$Ch" == "n" ]; then
				exit 1
			fi
		fi

		if [ "${DISTRIB}" == "darwin" ]; then
			# simply install from brew
			InstallSystemPackages cmake
			return
		fi

		(
			sudo rm -rf /tmp/cmake-install \
				&& mkdir -p /tmp/cmake-install \
				&& cd /tmp/cmake-install \
					|| CMakeSetupAbort "Cannot setup build dir /tmp/cmake-install"

			RemoveSystemPackages cmake \
				|| CMakeSetupAbort "cannot remove old CMake install"

			case "${DISTRIB}" in
				debian)
					InstallSystemPackages dpkg wget \
						|| CMakeSetupAbort "cannot install needed system package"
					;;
				*)
					InstallSystemPackages rpm-build wget \
						|| CMakeSetupAbort "cannot install needed system package"
					if [ "${BINDIR}" != "redhat64v6" ] && [ "${BINDIR}" != "redhat64" ] && [ "${BINDIR}" != "centos64v6" ]; then
						InstallSystemPackages libarchive${DEVPKG} \
							|| CMakeSetupAbort "cannot install needed system package"
					fi
					;;
			esac

			if [[ "$BINDIR" == "aarmv2" ]]; then
				# we need a newer compiler on aws arm linux 2
				InstallSystemPackages gcc10 gcc10-c++
				local SETCC="env CC=gcc10-gcc CXX=gcc10-g++"
			fi

			local CMakeURL="https://cmake.org/files/${sCmakeFolder}/cmake-${sCMakeNewVersion}.tar.gz"
			Info "downloading CMake ${sCMakeNewVersion} from ${CMakeURL}"
			if [ "${BINDIR}" == "redhat64v6" ] || [ "${BINDIR}" == "redhat64" ] || [ "${BINDIR}" == "centos64v6" ]; then
				wget -q --no-check-certificate ${CMakeURL} \
					|| CMakeSetupAbort "cannot download cmake (no-check-certificate)"
			else
				wget -q ${CMakeURL} \
					|| CMakeSetupAbort "cannot download cmake"
			fi

			tar -xzf cmake-${sCMakeNewVersion}.tar.gz \
				|| CMakeSetupAbort "cannot untar cmake"
			cd cmake-${sCMakeNewVersion} \
				|| CMakeSetupAbort "cannot enter cmake build dir"

			# we must patch the cmake install recipe for one file, as it will
			# otherwise collide with another RPM package
			Info "patching CMake ${sCMakeNewVersion}"
			cat Auxiliary/CMakeLists.txt | \
					sed 's|aclocal|aclocal\.cmake|' >Auxiliary/CMakeLists.txt2 \
				&& rm Auxiliary/CMakeLists.txt \
				&& mv Auxiliary/CMakeLists.txt2 Auxiliary/CMakeLists.txt \
					|| CMakeSetupAbort "cannot patch cmake"

			Info "building CMake ${sCMakeNewVersion}"
			${SETCC} ./bootstrap \
				--no-system-libs \
				--prefix=/usr \
				--datadir=share/cmake \
				--docdir=share/doc/cmake-3.13 \
				--mandir=share/man \
				--parallel=4 \
			&& make -j4 \
				|| CMakeSetupAbort "cannot build cmake"

			if [ "${DISTRIB}" == "debian" ]; then
				Info "creating CMake ${sCMakeNewVersion} DEB"
				bin/cpack -G DEB \
					|| CMakeSetupAbort "cannot create cmake DEB"

				Info "installing CMake ${sCMakeNewVersion} DEB"
				${INSTALL} -q ./cmake-${sCMakeNewVersion}-Linux-${ARCH}.deb \
					|| CMakeSetupAbort "cannot install built cmake DEB"
			else
				Info "creating CMake ${sCMakeNewVersion} RPM"
				bin/cpack -G RPM \
					|| CMakeSetupAbort "cannot create cmake RPM"

				Info "installing CMake ${sCMakeNewVersion} RPM"
				${INSTALL} -q --nogpgcheck ./cmake-${sCMakeNewVersion}-Linux-${ARCH}.rpm \
					|| CMakeSetupAbort "cannot install built cmake RPM"
			fi

			cd /

			sudo rm -rf /tmp/cmake-install \
				|| CMakeSetupAbort "cannot remove build directory"

			# check again version of installed cmake
			sCMakeNewInstVersion=$(cmake --version | sed 's|[^0-9.]||g')
			CMakeNewMajor=$(echo $sCMakeNewInstVersion | cut -d . -f 1)
			CMakeNewMinor=$(echo $sCMakeNewInstVersion | cut -d . -f 2)

			# expected 3.21
			if [ $CMakeNewMajor -eq 3 ] && [ $CMakeNewMinor -eq 13 ]; then
				Info "successfully installed CMake ${sCMakeNewInstVersion}"
			else
				Die "CMake ${sCMakeNewVersion} failed to install - found version ${sCMakeNewInstVersion} instead"
			fi

		) || Die "could not set up CMake $sCMakeNewVersion"
	fi

} # CMakeSetup


#==================
setx=Main_Body
#==================

ME=$(basename "${BASH_SOURCE}")
ME_ONLYPATH="$(cd $(dirname ${BASH_SOURCE}) && pwd)"
ME_FULLPATH="$ME_ONLYPATH/$ME"
ScriptLib="${ME_ONLYPATH}/scriptlib"

[[ ! -f "${ScriptLib}" ]] && Die "Cannot check OS version, script '${ScriptLib}' not found"

source ${ScriptLib}

if [ "$1" == "-ask" ]; then
	ask="1"
else
	if [ "$1" != "-go" ]; then
		Synopsis
		exit 1
	fi
fi

SetupColors
GetOS
CMakeSetup $ask

exit 0
